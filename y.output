Terminals unused in grammar

    BOOL
    CHAR
    BREAK
    AND
    OR
    NOT
    IF
    ELSE
    WHILE
    DO
    EQ
    NEQ
    GREQ
    GR
    SM
    SMEQ
    TRUE
    FALSE
    ':'


Grammar

    0 $accept: program $end

    1 program: expr '\n'
    2        | ID '\n'

    3 expr: expr '+' expr
    4     | expr '-' expr
    5     | expr '*' expr
    6     | expr '/' expr
    7     | INT
    8     | '-' expr
    9     | '(' expr ')'


Terminals, with rules where they appear

    $end (0) 0
    '\n' (10) 1 2
    '(' (40) 9
    ')' (41) 9
    '*' (42) 5
    '+' (43) 3
    '-' (45) 4 8
    '/' (47) 6
    ':' (58)
    error (256)
    INT <value> (258) 7
    ID <lexeme> (259) 2
    BOOL (260)
    CHAR (261)
    BREAK (262)
    AND (263)
    OR (264)
    NOT (265)
    IF (266)
    ELSE (267)
    WHILE (268)
    DO (269)
    EQ (270)
    NEQ (271)
    GREQ (272)
    GR (273)
    SM (274)
    SMEQ (275)
    TRUE (276)
    FALSE (277)
    UMINUS (278)


Nonterminals, with rules where they appear

    $accept (32)
        on left: 0
    program (33)
        on left: 1 2
        on right: 0
    expr <value> (34)
        on left: 3 4 5 6 7 8 9
        on right: 1 3 4 5 6 8 9


State 0

    0 $accept: . program $end

    INT  shift, and go to state 1
    ID   shift, and go to state 2
    '-'  shift, and go to state 3
    '('  shift, and go to state 4

    program  go to state 5
    expr     go to state 6


State 1

    7 expr: INT .

    $default  reduce using rule 7 (expr)


State 2

    2 program: ID . '\n'

    '\n'  shift, and go to state 7


State 3

    8 expr: '-' . expr

    INT  shift, and go to state 1
    '-'  shift, and go to state 3
    '('  shift, and go to state 4

    expr  go to state 8


State 4

    9 expr: '(' . expr ')'

    INT  shift, and go to state 1
    '-'  shift, and go to state 3
    '('  shift, and go to state 4

    expr  go to state 9


State 5

    0 $accept: program . $end

    $end  shift, and go to state 10


State 6

    1 program: expr . '\n'
    3 expr: expr . '+' expr
    4     | expr . '-' expr
    5     | expr . '*' expr
    6     | expr . '/' expr

    '-'   shift, and go to state 11
    '+'   shift, and go to state 12
    '*'   shift, and go to state 13
    '/'   shift, and go to state 14
    '\n'  shift, and go to state 15


State 7

    2 program: ID '\n' .

    $default  reduce using rule 2 (program)


State 8

    3 expr: expr . '+' expr
    4     | expr . '-' expr
    5     | expr . '*' expr
    6     | expr . '/' expr
    8     | '-' expr .

    $default  reduce using rule 8 (expr)


State 9

    3 expr: expr . '+' expr
    4     | expr . '-' expr
    5     | expr . '*' expr
    6     | expr . '/' expr
    9     | '(' expr . ')'

    '-'  shift, and go to state 11
    '+'  shift, and go to state 12
    '*'  shift, and go to state 13
    '/'  shift, and go to state 14
    ')'  shift, and go to state 16


State 10

    0 $accept: program $end .

    $default  accept


State 11

    4 expr: expr '-' . expr

    INT  shift, and go to state 1
    '-'  shift, and go to state 3
    '('  shift, and go to state 4

    expr  go to state 17


State 12

    3 expr: expr '+' . expr

    INT  shift, and go to state 1
    '-'  shift, and go to state 3
    '('  shift, and go to state 4

    expr  go to state 18


State 13

    5 expr: expr '*' . expr

    INT  shift, and go to state 1
    '-'  shift, and go to state 3
    '('  shift, and go to state 4

    expr  go to state 19


State 14

    6 expr: expr '/' . expr

    INT  shift, and go to state 1
    '-'  shift, and go to state 3
    '('  shift, and go to state 4

    expr  go to state 20


State 15

    1 program: expr '\n' .

    $default  reduce using rule 1 (program)


State 16

    9 expr: '(' expr ')' .

    $default  reduce using rule 9 (expr)


State 17

    3 expr: expr . '+' expr
    4     | expr . '-' expr
    4     | expr '-' expr .
    5     | expr . '*' expr
    6     | expr . '/' expr

    '*'  shift, and go to state 13
    '/'  shift, and go to state 14

    $default  reduce using rule 4 (expr)


State 18

    3 expr: expr . '+' expr
    3     | expr '+' expr .
    4     | expr . '-' expr
    5     | expr . '*' expr
    6     | expr . '/' expr

    '*'  shift, and go to state 13
    '/'  shift, and go to state 14

    $default  reduce using rule 3 (expr)


State 19

    3 expr: expr . '+' expr
    4     | expr . '-' expr
    5     | expr . '*' expr
    5     | expr '*' expr .
    6     | expr . '/' expr

    $default  reduce using rule 5 (expr)


State 20

    3 expr: expr . '+' expr
    4     | expr . '-' expr
    5     | expr . '*' expr
    6     | expr . '/' expr
    6     | expr '/' expr .

    $default  reduce using rule 6 (expr)
