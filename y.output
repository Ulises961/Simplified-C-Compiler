Terminals unused in grammar

    CHAR
    BREAK
    IF
    ELSE
    WHILE
    DO
    TRUE
    FALSE


Grammar

    0 $accept: program $end

    1 program: program statement '\n'
    2        | %empty

    3 statement: varDecl ';'
    4          | expr ';'
    5          | PRINT expr ';'
    6          | RETURN ';'

    7 varDecl: typeSpec ID ':' expr

    8 typeSpec: INT
    9         | BOOLEAN

   10 expr: intExpr
   11     | boolExpr
   12     | relExpr
   13     | ID

   14 intExpr: intExpr '+' intExpr
   15        | intExpr '-' intExpr
   16        | intExpr '*' intExpr
   17        | intExpr '/' intExpr
   18        | NUM
   19        | '-' intExpr
   20        | '(' intExpr ')'

   21 boolExpr: boolExpr AND boolExpr
   22         | boolExpr OR boolExpr
   23         | NOT boolExpr
   24         | BOOL
   25         | '(' boolExpr ')'

   26 relExpr: expr SMEQ expr
   27        | expr SM expr
   28        | expr GR expr
   29        | expr GREQ expr
   30        | expr EQ expr
   31        | expr NEQ expr
   32        | '(' relExpr ')'


Terminals, with rules where they appear

    $end (0) 0
    '\n' (10) 1
    '(' (40) 20 25 32
    ')' (41) 20 25 32
    '*' (42) 16
    '+' (43) 14
    '-' (45) 15 19
    '/' (47) 17
    ':' (58) 7
    ';' (59) 3 4 5 6
    error (256)
    NUM <integer> (258) 18
    BOOL <integer> (259) 24
    ID <lexeme> (260) 7 13
    CHAR (261)
    BREAK (262)
    AND (263) 21
    OR (264) 22
    NOT (265) 23
    IF (266)
    ELSE (267)
    WHILE (268)
    DO (269)
    SMEQ (270) 26
    SM (271) 27
    GR (272) 28
    GREQ (273) 29
    EQ (274) 30
    NEQ (275) 31
    TRUE (276)
    FALSE (277)
    RETURN (278) 6
    PRINT (279) 5
    INT <lexeme> (280) 8
    BOOLEAN <lexeme> (281) 9
    UMINUS (282)


Nonterminals, with rules where they appear

    $accept (37)
        on left: 0
    program (38)
        on left: 1 2
        on right: 0 1
    statement (39)
        on left: 3 4 5 6
        on right: 1
    varDecl (40)
        on left: 7
        on right: 3
    typeSpec <lexeme> (41)
        on left: 8 9
        on right: 7
    expr <integer> (42)
        on left: 10 11 12 13
        on right: 4 5 7 26 27 28 29 30 31
    intExpr <integer> (43)
        on left: 14 15 16 17 18 19 20
        on right: 10 14 15 16 17 19 20
    boolExpr <integer> (44)
        on left: 21 22 23 24 25
        on right: 11 21 22 23 25
    relExpr <integer> (45)
        on left: 26 27 28 29 30 31 32
        on right: 12 32


State 0

    0 $accept: . program $end

    $default  reduce using rule 2 (program)

    program  go to state 1


State 1

    0 $accept: program . $end
    1 program: program . statement '\n'

    $end     shift, and go to state 2
    NUM      shift, and go to state 3
    BOOL     shift, and go to state 4
    ID       shift, and go to state 5
    NOT      shift, and go to state 6
    RETURN   shift, and go to state 7
    PRINT    shift, and go to state 8
    INT      shift, and go to state 9
    BOOLEAN  shift, and go to state 10
    '-'      shift, and go to state 11
    '('      shift, and go to state 12

    statement  go to state 13
    varDecl    go to state 14
    typeSpec   go to state 15
    expr       go to state 16
    intExpr    go to state 17
    boolExpr   go to state 18
    relExpr    go to state 19


State 2

    0 $accept: program $end .

    $default  accept


State 3

   18 intExpr: NUM .

    $default  reduce using rule 18 (intExpr)


State 4

   24 boolExpr: BOOL .

    $default  reduce using rule 24 (boolExpr)


State 5

   13 expr: ID .

    $default  reduce using rule 13 (expr)


State 6

   23 boolExpr: NOT . boolExpr

    BOOL  shift, and go to state 4
    NOT   shift, and go to state 6
    '('   shift, and go to state 20

    boolExpr  go to state 21


State 7

    6 statement: RETURN . ';'

    ';'  shift, and go to state 22


State 8

    5 statement: PRINT . expr ';'

    NUM   shift, and go to state 3
    BOOL  shift, and go to state 4
    ID    shift, and go to state 5
    NOT   shift, and go to state 6
    '-'   shift, and go to state 11
    '('   shift, and go to state 12

    expr      go to state 23
    intExpr   go to state 17
    boolExpr  go to state 18
    relExpr   go to state 19


State 9

    8 typeSpec: INT .

    $default  reduce using rule 8 (typeSpec)


State 10

    9 typeSpec: BOOLEAN .

    $default  reduce using rule 9 (typeSpec)


State 11

   19 intExpr: '-' . intExpr

    NUM  shift, and go to state 3
    '-'  shift, and go to state 11
    '('  shift, and go to state 24

    intExpr  go to state 25


State 12

   20 intExpr: '(' . intExpr ')'
   25 boolExpr: '(' . boolExpr ')'
   32 relExpr: '(' . relExpr ')'

    NUM   shift, and go to state 3
    BOOL  shift, and go to state 4
    ID    shift, and go to state 5
    NOT   shift, and go to state 6
    '-'   shift, and go to state 11
    '('   shift, and go to state 12

    expr      go to state 26
    intExpr   go to state 27
    boolExpr  go to state 28
    relExpr   go to state 29


State 13

    1 program: program statement . '\n'

    '\n'  shift, and go to state 30


State 14

    3 statement: varDecl . ';'

    ';'  shift, and go to state 31


State 15

    7 varDecl: typeSpec . ID ':' expr

    ID  shift, and go to state 32


State 16

    4 statement: expr . ';'
   26 relExpr: expr . SMEQ expr
   27        | expr . SM expr
   28        | expr . GR expr
   29        | expr . GREQ expr
   30        | expr . EQ expr
   31        | expr . NEQ expr

    SMEQ  shift, and go to state 33
    SM    shift, and go to state 34
    GR    shift, and go to state 35
    GREQ  shift, and go to state 36
    EQ    shift, and go to state 37
    NEQ   shift, and go to state 38
    ';'   shift, and go to state 39


State 17

   10 expr: intExpr .
   14 intExpr: intExpr . '+' intExpr
   15        | intExpr . '-' intExpr
   16        | intExpr . '*' intExpr
   17        | intExpr . '/' intExpr

    '-'  shift, and go to state 40
    '+'  shift, and go to state 41
    '*'  shift, and go to state 42
    '/'  shift, and go to state 43

    $default  reduce using rule 10 (expr)


State 18

   11 expr: boolExpr .
   21 boolExpr: boolExpr . AND boolExpr
   22         | boolExpr . OR boolExpr

    AND  shift, and go to state 44
    OR   shift, and go to state 45

    $default  reduce using rule 11 (expr)


State 19

   12 expr: relExpr .

    $default  reduce using rule 12 (expr)


State 20

   25 boolExpr: '(' . boolExpr ')'

    BOOL  shift, and go to state 4
    NOT   shift, and go to state 6
    '('   shift, and go to state 20

    boolExpr  go to state 46


State 21

   21 boolExpr: boolExpr . AND boolExpr
   22         | boolExpr . OR boolExpr
   23         | NOT boolExpr .

    $default  reduce using rule 23 (boolExpr)


State 22

    6 statement: RETURN ';' .

    $default  reduce using rule 6 (statement)


State 23

    5 statement: PRINT expr . ';'
   26 relExpr: expr . SMEQ expr
   27        | expr . SM expr
   28        | expr . GR expr
   29        | expr . GREQ expr
   30        | expr . EQ expr
   31        | expr . NEQ expr

    SMEQ  shift, and go to state 33
    SM    shift, and go to state 34
    GR    shift, and go to state 35
    GREQ  shift, and go to state 36
    EQ    shift, and go to state 37
    NEQ   shift, and go to state 38
    ';'   shift, and go to state 47


State 24

   20 intExpr: '(' . intExpr ')'

    NUM  shift, and go to state 3
    '-'  shift, and go to state 11
    '('  shift, and go to state 24

    intExpr  go to state 48


State 25

   14 intExpr: intExpr . '+' intExpr
   15        | intExpr . '-' intExpr
   16        | intExpr . '*' intExpr
   17        | intExpr . '/' intExpr
   19        | '-' intExpr .

    $default  reduce using rule 19 (intExpr)


State 26

   26 relExpr: expr . SMEQ expr
   27        | expr . SM expr
   28        | expr . GR expr
   29        | expr . GREQ expr
   30        | expr . EQ expr
   31        | expr . NEQ expr

    SMEQ  shift, and go to state 33
    SM    shift, and go to state 34
    GR    shift, and go to state 35
    GREQ  shift, and go to state 36
    EQ    shift, and go to state 37
    NEQ   shift, and go to state 38


State 27

   10 expr: intExpr .
   14 intExpr: intExpr . '+' intExpr
   15        | intExpr . '-' intExpr
   16        | intExpr . '*' intExpr
   17        | intExpr . '/' intExpr
   20        | '(' intExpr . ')'

    '-'  shift, and go to state 40
    '+'  shift, and go to state 41
    '*'  shift, and go to state 42
    '/'  shift, and go to state 43
    ')'  shift, and go to state 49

    $default  reduce using rule 10 (expr)


State 28

   11 expr: boolExpr .
   21 boolExpr: boolExpr . AND boolExpr
   22         | boolExpr . OR boolExpr
   25         | '(' boolExpr . ')'

    AND  shift, and go to state 44
    OR   shift, and go to state 45
    ')'  shift, and go to state 50

    $default  reduce using rule 11 (expr)


State 29

   12 expr: relExpr .
   32 relExpr: '(' relExpr . ')'

    ')'  shift, and go to state 51

    $default  reduce using rule 12 (expr)


State 30

    1 program: program statement '\n' .

    $default  reduce using rule 1 (program)


State 31

    3 statement: varDecl ';' .

    $default  reduce using rule 3 (statement)


State 32

    7 varDecl: typeSpec ID . ':' expr

    ':'  shift, and go to state 52


State 33

   26 relExpr: expr SMEQ . expr

    NUM   shift, and go to state 3
    BOOL  shift, and go to state 4
    ID    shift, and go to state 5
    NOT   shift, and go to state 6
    '-'   shift, and go to state 11
    '('   shift, and go to state 12

    expr      go to state 53
    intExpr   go to state 17
    boolExpr  go to state 18
    relExpr   go to state 19


State 34

   27 relExpr: expr SM . expr

    NUM   shift, and go to state 3
    BOOL  shift, and go to state 4
    ID    shift, and go to state 5
    NOT   shift, and go to state 6
    '-'   shift, and go to state 11
    '('   shift, and go to state 12

    expr      go to state 54
    intExpr   go to state 17
    boolExpr  go to state 18
    relExpr   go to state 19


State 35

   28 relExpr: expr GR . expr

    NUM   shift, and go to state 3
    BOOL  shift, and go to state 4
    ID    shift, and go to state 5
    NOT   shift, and go to state 6
    '-'   shift, and go to state 11
    '('   shift, and go to state 12

    expr      go to state 55
    intExpr   go to state 17
    boolExpr  go to state 18
    relExpr   go to state 19


State 36

   29 relExpr: expr GREQ . expr

    NUM   shift, and go to state 3
    BOOL  shift, and go to state 4
    ID    shift, and go to state 5
    NOT   shift, and go to state 6
    '-'   shift, and go to state 11
    '('   shift, and go to state 12

    expr      go to state 56
    intExpr   go to state 17
    boolExpr  go to state 18
    relExpr   go to state 19


State 37

   30 relExpr: expr EQ . expr

    NUM   shift, and go to state 3
    BOOL  shift, and go to state 4
    ID    shift, and go to state 5
    NOT   shift, and go to state 6
    '-'   shift, and go to state 11
    '('   shift, and go to state 12

    expr      go to state 57
    intExpr   go to state 17
    boolExpr  go to state 18
    relExpr   go to state 19


State 38

   31 relExpr: expr NEQ . expr

    NUM   shift, and go to state 3
    BOOL  shift, and go to state 4
    ID    shift, and go to state 5
    NOT   shift, and go to state 6
    '-'   shift, and go to state 11
    '('   shift, and go to state 12

    expr      go to state 58
    intExpr   go to state 17
    boolExpr  go to state 18
    relExpr   go to state 19


State 39

    4 statement: expr ';' .

    $default  reduce using rule 4 (statement)


State 40

   15 intExpr: intExpr '-' . intExpr

    NUM  shift, and go to state 3
    '-'  shift, and go to state 11
    '('  shift, and go to state 24

    intExpr  go to state 59


State 41

   14 intExpr: intExpr '+' . intExpr

    NUM  shift, and go to state 3
    '-'  shift, and go to state 11
    '('  shift, and go to state 24

    intExpr  go to state 60


State 42

   16 intExpr: intExpr '*' . intExpr

    NUM  shift, and go to state 3
    '-'  shift, and go to state 11
    '('  shift, and go to state 24

    intExpr  go to state 61


State 43

   17 intExpr: intExpr '/' . intExpr

    NUM  shift, and go to state 3
    '-'  shift, and go to state 11
    '('  shift, and go to state 24

    intExpr  go to state 62


State 44

   21 boolExpr: boolExpr AND . boolExpr

    BOOL  shift, and go to state 4
    NOT   shift, and go to state 6
    '('   shift, and go to state 20

    boolExpr  go to state 63


State 45

   22 boolExpr: boolExpr OR . boolExpr

    BOOL  shift, and go to state 4
    NOT   shift, and go to state 6
    '('   shift, and go to state 20

    boolExpr  go to state 64


State 46

   21 boolExpr: boolExpr . AND boolExpr
   22         | boolExpr . OR boolExpr
   25         | '(' boolExpr . ')'

    AND  shift, and go to state 44
    OR   shift, and go to state 45
    ')'  shift, and go to state 50


State 47

    5 statement: PRINT expr ';' .

    $default  reduce using rule 5 (statement)


State 48

   14 intExpr: intExpr . '+' intExpr
   15        | intExpr . '-' intExpr
   16        | intExpr . '*' intExpr
   17        | intExpr . '/' intExpr
   20        | '(' intExpr . ')'

    '-'  shift, and go to state 40
    '+'  shift, and go to state 41
    '*'  shift, and go to state 42
    '/'  shift, and go to state 43
    ')'  shift, and go to state 49


State 49

   20 intExpr: '(' intExpr ')' .

    $default  reduce using rule 20 (intExpr)


State 50

   25 boolExpr: '(' boolExpr ')' .

    $default  reduce using rule 25 (boolExpr)


State 51

   32 relExpr: '(' relExpr ')' .

    $default  reduce using rule 32 (relExpr)


State 52

    7 varDecl: typeSpec ID ':' . expr

    NUM   shift, and go to state 3
    BOOL  shift, and go to state 4
    ID    shift, and go to state 5
    NOT   shift, and go to state 6
    '-'   shift, and go to state 11
    '('   shift, and go to state 12

    expr      go to state 65
    intExpr   go to state 17
    boolExpr  go to state 18
    relExpr   go to state 19


State 53

   26 relExpr: expr . SMEQ expr
   26        | expr SMEQ expr .
   27        | expr . SM expr
   28        | expr . GR expr
   29        | expr . GREQ expr
   30        | expr . EQ expr
   31        | expr . NEQ expr

    $default  reduce using rule 26 (relExpr)


State 54

   26 relExpr: expr . SMEQ expr
   27        | expr . SM expr
   27        | expr SM expr .
   28        | expr . GR expr
   29        | expr . GREQ expr
   30        | expr . EQ expr
   31        | expr . NEQ expr

    $default  reduce using rule 27 (relExpr)


State 55

   26 relExpr: expr . SMEQ expr
   27        | expr . SM expr
   28        | expr . GR expr
   28        | expr GR expr .
   29        | expr . GREQ expr
   30        | expr . EQ expr
   31        | expr . NEQ expr

    $default  reduce using rule 28 (relExpr)


State 56

   26 relExpr: expr . SMEQ expr
   27        | expr . SM expr
   28        | expr . GR expr
   29        | expr . GREQ expr
   29        | expr GREQ expr .
   30        | expr . EQ expr
   31        | expr . NEQ expr

    $default  reduce using rule 29 (relExpr)


State 57

   26 relExpr: expr . SMEQ expr
   27        | expr . SM expr
   28        | expr . GR expr
   29        | expr . GREQ expr
   30        | expr . EQ expr
   30        | expr EQ expr .
   31        | expr . NEQ expr

    $default  reduce using rule 30 (relExpr)


State 58

   26 relExpr: expr . SMEQ expr
   27        | expr . SM expr
   28        | expr . GR expr
   29        | expr . GREQ expr
   30        | expr . EQ expr
   31        | expr . NEQ expr
   31        | expr NEQ expr .

    $default  reduce using rule 31 (relExpr)


State 59

   14 intExpr: intExpr . '+' intExpr
   15        | intExpr . '-' intExpr
   15        | intExpr '-' intExpr .
   16        | intExpr . '*' intExpr
   17        | intExpr . '/' intExpr

    '*'  shift, and go to state 42
    '/'  shift, and go to state 43

    $default  reduce using rule 15 (intExpr)


State 60

   14 intExpr: intExpr . '+' intExpr
   14        | intExpr '+' intExpr .
   15        | intExpr . '-' intExpr
   16        | intExpr . '*' intExpr
   17        | intExpr . '/' intExpr

    '*'  shift, and go to state 42
    '/'  shift, and go to state 43

    $default  reduce using rule 14 (intExpr)


State 61

   14 intExpr: intExpr . '+' intExpr
   15        | intExpr . '-' intExpr
   16        | intExpr . '*' intExpr
   16        | intExpr '*' intExpr .
   17        | intExpr . '/' intExpr

    $default  reduce using rule 16 (intExpr)


State 62

   14 intExpr: intExpr . '+' intExpr
   15        | intExpr . '-' intExpr
   16        | intExpr . '*' intExpr
   17        | intExpr . '/' intExpr
   17        | intExpr '/' intExpr .

    $default  reduce using rule 17 (intExpr)


State 63

   21 boolExpr: boolExpr . AND boolExpr
   21         | boolExpr AND boolExpr .
   22         | boolExpr . OR boolExpr

    $default  reduce using rule 21 (boolExpr)


State 64

   21 boolExpr: boolExpr . AND boolExpr
   22         | boolExpr . OR boolExpr
   22         | boolExpr OR boolExpr .

    $default  reduce using rule 22 (boolExpr)


State 65

    7 varDecl: typeSpec ID ':' expr .
   26 relExpr: expr . SMEQ expr
   27        | expr . SM expr
   28        | expr . GR expr
   29        | expr . GREQ expr
   30        | expr . EQ expr
   31        | expr . NEQ expr

    SMEQ  shift, and go to state 33
    SM    shift, and go to state 34
    GR    shift, and go to state 35
    GREQ  shift, and go to state 36
    EQ    shift, and go to state 37
    NEQ   shift, and go to state 38

    $default  reduce using rule 7 (varDecl)
