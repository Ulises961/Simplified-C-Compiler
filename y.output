Terminals unused in grammar

    CHAR
    BREAK
    IF
    ELSE
    WHILE
    DO
    TRUE
    FALSE
    RETURN


Grammar

    0 $accept: program $end

    1 program: intExpr '\n'
    2        | boolExpr '\n'
    3        | ID '\n'
    4        | INT '\n'
    5        | declaration
    6        | relOp '\n'

    7 declaration: typeSpec ID ':' intExpr '\n'
    8            | typeSpec ID ':' boolExpr '\n'

    9 typeSpec: INT
   10         | BOOLEAN

   11 intExpr: intExpr '+' intExpr
   12        | intExpr '-' intExpr
   13        | intExpr '*' intExpr
   14        | intExpr '/' intExpr
   15        | NUM
   16        | '-' intExpr
   17        | '(' intExpr ')'

   18 boolExpr: boolExpr AND boolExpr
   19         | boolExpr OR boolExpr
   20         | NOT boolExpr
   21         | BOOL
   22         | '(' boolExpr ')'

   23 relOp: intExpr SMEQ intExpr
   24      | intExpr SM intExpr
   25      | intExpr GR intExpr
   26      | intExpr GREQ intExpr
   27      | intExpr EQ intExpr
   28      | intExpr NEQ intExpr


Terminals, with rules where they appear

    $end (0) 0
    '\n' (10) 1 2 3 4 6 7 8
    '(' (40) 17 22
    ')' (41) 17 22
    '*' (42) 13
    '+' (43) 11
    '-' (45) 12 16
    '/' (47) 14
    ':' (58) 7 8
    error (256)
    NUM <integer> (258) 15
    BOOL <boolean> (259) 21
    ID <lexeme> (260) 3 7 8
    CHAR (261)
    BREAK (262)
    AND (263) 18
    OR (264) 19
    NOT (265) 20
    IF (266)
    ELSE (267)
    WHILE (268)
    DO (269)
    EQ (270) 27
    NEQ (271) 28
    GREQ (272) 26
    GR (273) 25
    SM (274) 24
    SMEQ (275) 23
    TRUE (276)
    FALSE (277)
    RETURN (278)
    INT <lexeme> (279) 4 9
    BOOLEAN <lexeme> (280) 10
    UMINUS (281)


Nonterminals, with rules where they appear

    $accept (35)
        on left: 0
    program (36)
        on left: 1 2 3 4 5 6
        on right: 0
    declaration (37)
        on left: 7 8
        on right: 5
    typeSpec <lexeme> (38)
        on left: 9 10
        on right: 7 8
    intExpr <integer> (39)
        on left: 11 12 13 14 15 16 17
        on right: 1 7 11 12 13 14 16 17 23 24 25 26 27 28
    boolExpr <boolean> (40)
        on left: 18 19 20 21 22
        on right: 2 8 18 19 20 22
    relOp <boolean> (41)
        on left: 23 24 25 26 27 28
        on right: 6


State 0

    0 $accept: . program $end

    NUM      shift, and go to state 1
    BOOL     shift, and go to state 2
    ID       shift, and go to state 3
    NOT      shift, and go to state 4
    INT      shift, and go to state 5
    BOOLEAN  shift, and go to state 6
    '-'      shift, and go to state 7
    '('      shift, and go to state 8

    program      go to state 9
    declaration  go to state 10
    typeSpec     go to state 11
    intExpr      go to state 12
    boolExpr     go to state 13
    relOp        go to state 14


State 1

   15 intExpr: NUM .

    $default  reduce using rule 15 (intExpr)


State 2

   21 boolExpr: BOOL .

    $default  reduce using rule 21 (boolExpr)


State 3

    3 program: ID . '\n'

    '\n'  shift, and go to state 15


State 4

   20 boolExpr: NOT . boolExpr

    BOOL  shift, and go to state 2
    NOT   shift, and go to state 4
    '('   shift, and go to state 16

    boolExpr  go to state 17


State 5

    4 program: INT . '\n'
    9 typeSpec: INT .

    '\n'  shift, and go to state 18

    $default  reduce using rule 9 (typeSpec)


State 6

   10 typeSpec: BOOLEAN .

    $default  reduce using rule 10 (typeSpec)


State 7

   16 intExpr: '-' . intExpr

    NUM  shift, and go to state 1
    '-'  shift, and go to state 7
    '('  shift, and go to state 19

    intExpr  go to state 20


State 8

   17 intExpr: '(' . intExpr ')'
   22 boolExpr: '(' . boolExpr ')'

    NUM   shift, and go to state 1
    BOOL  shift, and go to state 2
    NOT   shift, and go to state 4
    '-'   shift, and go to state 7
    '('   shift, and go to state 8

    intExpr   go to state 21
    boolExpr  go to state 22


State 9

    0 $accept: program . $end

    $end  shift, and go to state 23


State 10

    5 program: declaration .

    $default  reduce using rule 5 (program)


State 11

    7 declaration: typeSpec . ID ':' intExpr '\n'
    8            | typeSpec . ID ':' boolExpr '\n'

    ID  shift, and go to state 24


State 12

    1 program: intExpr . '\n'
   11 intExpr: intExpr . '+' intExpr
   12        | intExpr . '-' intExpr
   13        | intExpr . '*' intExpr
   14        | intExpr . '/' intExpr
   23 relOp: intExpr . SMEQ intExpr
   24      | intExpr . SM intExpr
   25      | intExpr . GR intExpr
   26      | intExpr . GREQ intExpr
   27      | intExpr . EQ intExpr
   28      | intExpr . NEQ intExpr

    EQ    shift, and go to state 25
    NEQ   shift, and go to state 26
    GREQ  shift, and go to state 27
    GR    shift, and go to state 28
    SM    shift, and go to state 29
    SMEQ  shift, and go to state 30
    '-'   shift, and go to state 31
    '+'   shift, and go to state 32
    '*'   shift, and go to state 33
    '/'   shift, and go to state 34
    '\n'  shift, and go to state 35


State 13

    2 program: boolExpr . '\n'
   18 boolExpr: boolExpr . AND boolExpr
   19         | boolExpr . OR boolExpr

    AND   shift, and go to state 36
    OR    shift, and go to state 37
    '\n'  shift, and go to state 38


State 14

    6 program: relOp . '\n'

    '\n'  shift, and go to state 39


State 15

    3 program: ID '\n' .

    $default  reduce using rule 3 (program)


State 16

   22 boolExpr: '(' . boolExpr ')'

    BOOL  shift, and go to state 2
    NOT   shift, and go to state 4
    '('   shift, and go to state 16

    boolExpr  go to state 22


State 17

   18 boolExpr: boolExpr . AND boolExpr
   19         | boolExpr . OR boolExpr
   20         | NOT boolExpr .

    $default  reduce using rule 20 (boolExpr)


State 18

    4 program: INT '\n' .

    $default  reduce using rule 4 (program)


State 19

   17 intExpr: '(' . intExpr ')'

    NUM  shift, and go to state 1
    '-'  shift, and go to state 7
    '('  shift, and go to state 19

    intExpr  go to state 21


State 20

   11 intExpr: intExpr . '+' intExpr
   12        | intExpr . '-' intExpr
   13        | intExpr . '*' intExpr
   14        | intExpr . '/' intExpr
   16        | '-' intExpr .

    $default  reduce using rule 16 (intExpr)


State 21

   11 intExpr: intExpr . '+' intExpr
   12        | intExpr . '-' intExpr
   13        | intExpr . '*' intExpr
   14        | intExpr . '/' intExpr
   17        | '(' intExpr . ')'

    '-'  shift, and go to state 31
    '+'  shift, and go to state 32
    '*'  shift, and go to state 33
    '/'  shift, and go to state 34
    ')'  shift, and go to state 40


State 22

   18 boolExpr: boolExpr . AND boolExpr
   19         | boolExpr . OR boolExpr
   22         | '(' boolExpr . ')'

    AND  shift, and go to state 36
    OR   shift, and go to state 37
    ')'  shift, and go to state 41


State 23

    0 $accept: program $end .

    $default  accept


State 24

    7 declaration: typeSpec ID . ':' intExpr '\n'
    8            | typeSpec ID . ':' boolExpr '\n'

    ':'  shift, and go to state 42


State 25

   27 relOp: intExpr EQ . intExpr

    NUM  shift, and go to state 1
    '-'  shift, and go to state 7
    '('  shift, and go to state 19

    intExpr  go to state 43


State 26

   28 relOp: intExpr NEQ . intExpr

    NUM  shift, and go to state 1
    '-'  shift, and go to state 7
    '('  shift, and go to state 19

    intExpr  go to state 44


State 27

   26 relOp: intExpr GREQ . intExpr

    NUM  shift, and go to state 1
    '-'  shift, and go to state 7
    '('  shift, and go to state 19

    intExpr  go to state 45


State 28

   25 relOp: intExpr GR . intExpr

    NUM  shift, and go to state 1
    '-'  shift, and go to state 7
    '('  shift, and go to state 19

    intExpr  go to state 46


State 29

   24 relOp: intExpr SM . intExpr

    NUM  shift, and go to state 1
    '-'  shift, and go to state 7
    '('  shift, and go to state 19

    intExpr  go to state 47


State 30

   23 relOp: intExpr SMEQ . intExpr

    NUM  shift, and go to state 1
    '-'  shift, and go to state 7
    '('  shift, and go to state 19

    intExpr  go to state 48


State 31

   12 intExpr: intExpr '-' . intExpr

    NUM  shift, and go to state 1
    '-'  shift, and go to state 7
    '('  shift, and go to state 19

    intExpr  go to state 49


State 32

   11 intExpr: intExpr '+' . intExpr

    NUM  shift, and go to state 1
    '-'  shift, and go to state 7
    '('  shift, and go to state 19

    intExpr  go to state 50


State 33

   13 intExpr: intExpr '*' . intExpr

    NUM  shift, and go to state 1
    '-'  shift, and go to state 7
    '('  shift, and go to state 19

    intExpr  go to state 51


State 34

   14 intExpr: intExpr '/' . intExpr

    NUM  shift, and go to state 1
    '-'  shift, and go to state 7
    '('  shift, and go to state 19

    intExpr  go to state 52


State 35

    1 program: intExpr '\n' .

    $default  reduce using rule 1 (program)


State 36

   18 boolExpr: boolExpr AND . boolExpr

    BOOL  shift, and go to state 2
    NOT   shift, and go to state 4
    '('   shift, and go to state 16

    boolExpr  go to state 53


State 37

   19 boolExpr: boolExpr OR . boolExpr

    BOOL  shift, and go to state 2
    NOT   shift, and go to state 4
    '('   shift, and go to state 16

    boolExpr  go to state 54


State 38

    2 program: boolExpr '\n' .

    $default  reduce using rule 2 (program)


State 39

    6 program: relOp '\n' .

    $default  reduce using rule 6 (program)


State 40

   17 intExpr: '(' intExpr ')' .

    $default  reduce using rule 17 (intExpr)


State 41

   22 boolExpr: '(' boolExpr ')' .

    $default  reduce using rule 22 (boolExpr)


State 42

    7 declaration: typeSpec ID ':' . intExpr '\n'
    8            | typeSpec ID ':' . boolExpr '\n'

    NUM   shift, and go to state 1
    BOOL  shift, and go to state 2
    NOT   shift, and go to state 4
    '-'   shift, and go to state 7
    '('   shift, and go to state 8

    intExpr   go to state 55
    boolExpr  go to state 56


State 43

   11 intExpr: intExpr . '+' intExpr
   12        | intExpr . '-' intExpr
   13        | intExpr . '*' intExpr
   14        | intExpr . '/' intExpr
   27 relOp: intExpr EQ intExpr .

    '-'  shift, and go to state 31
    '+'  shift, and go to state 32
    '*'  shift, and go to state 33
    '/'  shift, and go to state 34

    $default  reduce using rule 27 (relOp)


State 44

   11 intExpr: intExpr . '+' intExpr
   12        | intExpr . '-' intExpr
   13        | intExpr . '*' intExpr
   14        | intExpr . '/' intExpr
   28 relOp: intExpr NEQ intExpr .

    '-'  shift, and go to state 31
    '+'  shift, and go to state 32
    '*'  shift, and go to state 33
    '/'  shift, and go to state 34

    $default  reduce using rule 28 (relOp)


State 45

   11 intExpr: intExpr . '+' intExpr
   12        | intExpr . '-' intExpr
   13        | intExpr . '*' intExpr
   14        | intExpr . '/' intExpr
   26 relOp: intExpr GREQ intExpr .

    '-'  shift, and go to state 31
    '+'  shift, and go to state 32
    '*'  shift, and go to state 33
    '/'  shift, and go to state 34

    $default  reduce using rule 26 (relOp)


State 46

   11 intExpr: intExpr . '+' intExpr
   12        | intExpr . '-' intExpr
   13        | intExpr . '*' intExpr
   14        | intExpr . '/' intExpr
   25 relOp: intExpr GR intExpr .

    '-'  shift, and go to state 31
    '+'  shift, and go to state 32
    '*'  shift, and go to state 33
    '/'  shift, and go to state 34

    $default  reduce using rule 25 (relOp)


State 47

   11 intExpr: intExpr . '+' intExpr
   12        | intExpr . '-' intExpr
   13        | intExpr . '*' intExpr
   14        | intExpr . '/' intExpr
   24 relOp: intExpr SM intExpr .

    '-'  shift, and go to state 31
    '+'  shift, and go to state 32
    '*'  shift, and go to state 33
    '/'  shift, and go to state 34

    $default  reduce using rule 24 (relOp)


State 48

   11 intExpr: intExpr . '+' intExpr
   12        | intExpr . '-' intExpr
   13        | intExpr . '*' intExpr
   14        | intExpr . '/' intExpr
   23 relOp: intExpr SMEQ intExpr .

    '-'  shift, and go to state 31
    '+'  shift, and go to state 32
    '*'  shift, and go to state 33
    '/'  shift, and go to state 34

    $default  reduce using rule 23 (relOp)


State 49

   11 intExpr: intExpr . '+' intExpr
   12        | intExpr . '-' intExpr
   12        | intExpr '-' intExpr .
   13        | intExpr . '*' intExpr
   14        | intExpr . '/' intExpr

    '*'  shift, and go to state 33
    '/'  shift, and go to state 34

    $default  reduce using rule 12 (intExpr)


State 50

   11 intExpr: intExpr . '+' intExpr
   11        | intExpr '+' intExpr .
   12        | intExpr . '-' intExpr
   13        | intExpr . '*' intExpr
   14        | intExpr . '/' intExpr

    '*'  shift, and go to state 33
    '/'  shift, and go to state 34

    $default  reduce using rule 11 (intExpr)


State 51

   11 intExpr: intExpr . '+' intExpr
   12        | intExpr . '-' intExpr
   13        | intExpr . '*' intExpr
   13        | intExpr '*' intExpr .
   14        | intExpr . '/' intExpr

    $default  reduce using rule 13 (intExpr)


State 52

   11 intExpr: intExpr . '+' intExpr
   12        | intExpr . '-' intExpr
   13        | intExpr . '*' intExpr
   14        | intExpr . '/' intExpr
   14        | intExpr '/' intExpr .

    $default  reduce using rule 14 (intExpr)


State 53

   18 boolExpr: boolExpr . AND boolExpr
   18         | boolExpr AND boolExpr .
   19         | boolExpr . OR boolExpr

    $default  reduce using rule 18 (boolExpr)


State 54

   18 boolExpr: boolExpr . AND boolExpr
   19         | boolExpr . OR boolExpr
   19         | boolExpr OR boolExpr .

    $default  reduce using rule 19 (boolExpr)


State 55

    7 declaration: typeSpec ID ':' intExpr . '\n'
   11 intExpr: intExpr . '+' intExpr
   12        | intExpr . '-' intExpr
   13        | intExpr . '*' intExpr
   14        | intExpr . '/' intExpr

    '-'   shift, and go to state 31
    '+'   shift, and go to state 32
    '*'   shift, and go to state 33
    '/'   shift, and go to state 34
    '\n'  shift, and go to state 57


State 56

    8 declaration: typeSpec ID ':' boolExpr . '\n'
   18 boolExpr: boolExpr . AND boolExpr
   19         | boolExpr . OR boolExpr

    AND   shift, and go to state 36
    OR    shift, and go to state 37
    '\n'  shift, and go to state 58


State 57

    7 declaration: typeSpec ID ':' intExpr '\n' .

    $default  reduce using rule 7 (declaration)


State 58

    8 declaration: typeSpec ID ':' boolExpr '\n' .

    $default  reduce using rule 8 (declaration)
